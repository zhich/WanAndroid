apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的 so 库架构（开发者可以根据需要，选择一个或多个平台的 so）
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation("com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion") {
        exclude group: 'animated-vector-drawable'
    }
    api "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"

    api "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"

    api("com.trello.rxlifecycle2:rxlifecycle-kotlin:$rootProject.ext.rxlifecycleVersion") {
        exclude module: 'support-annotations'
    }

    api("com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:$rootProject.ext.rxlifecycleVersion") {
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }

    // alternatively - just ViewModel
    api "android.arch.lifecycle:viewmodel:$rootProject.ext.lifecycleVersion" // use -ktx for Kotlin
    // alternatively - just LiveData
    api "android.arch.lifecycle:livedata:$rootProject.ext.lifecycleVersion"
    api "android.arch.lifecycle:extensions:$rootProject.ext.lifecycleVersion"

    implementation "com.alibaba:arouter-api:$rootProject.ext.arouterApi"
    kapt "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompiler"

    api "com.yanzhenjie:permission:$rootProject.ext.runtimePermissionVersion"

    api "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    api "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    api "jp.wasabeef:glide-transformations:$rootProject.ext.glideTransformationsVersion"

    api "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroidVersion"
    api "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    api "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"
    api "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.ext.retrofit2Rxjava2AdapterVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"

}
